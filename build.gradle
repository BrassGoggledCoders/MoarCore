buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

repositories {
    maven {
        name "Base/MoU/IE"
        url "http://maven.blamejared.com"
    }
    maven {
        name 'JEI/Tinkers'
        url "http://dvs1.progwml6.com/files/maven"
    }
    ivy {
        name "Botania"
        artifactPattern "http://botaniamod.net/files/[module] [revision].[ext]"
    }
    maven {
        name 'CompatLayer/The One Probe'
        url 'http://modmaven.k-4u.nl'
    }
    maven {
        name 'CoFH Maven'
        url "http://maven.covers1624.net/"
    }
    maven {
        name 'Baubles'
        url 'https://jitpack.io'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = getVersion()

group = "xyz.brassgoggledcoders.opentransport"
archivesBaseName = "OpenTransport"

minecraft {
    version = "${minecraft_version}-${forge_version}"

    mappings = "${mappings_version}"
    runDir = "run/"
    useDepAts = true

    replace "@VERSION@", project.version
    replaceIn "OpenTransport.java"

    replace "base@[0.0.0,)", "base@[" + base_version + ",)"
    replaceIn "OpenTransport.java"
}

dependencies {
    deobfCompile "com.teamacronymcoders.base:base:${minecraft_version}-${base_version}"
    deobfCompile "cpw.mods:ironchest:${minecraft_version}-${iron_chest_version}"
    deobfCompile "mezz.jei:jei_${minecraft_version}:${jei_version}"
    deobfCompile "blusunrize:ImmersiveEngineering:${immersive_engineering_version}"
    deobfCompile "mcjty.theoneprobe:TheOneProbe-${minecraft_version}:${minecraft_version}-${top_version}"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

processResources
        {
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

jar {
    classifier = ""
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output) {
        classifier = "deobf"
    }
}

artifacts {
    archives deobfJar
}

idea {
    module {
        inheritOutputDirs = true
    }
}

apply plugin: 'maven'
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://" + (System.getenv("local_maven") != null ? System.getenv("local_maven") : System.getenv("bamboo_local_maven")))
            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description project.archivesBaseName
                    url ''
                    scm {
                        url 'https://github.com/BrassGoggledCoders/OpenTransport'
                        connection 'scm:git:git@github.com:BrassGoggledCoders/OpenTransport.git'
                        developerConnection 'scm:git:git@github.com:BrassGoggledCoders/OpenTransport.git'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/BrassGoggledCoders/OpenTransport/issues'
                    }
                    licenses {
                        license {
                            name 'MIT'
                            url 'https://github.com/BrassGoggledCoders/OpenTransport/blob/master/LICENSE'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'SkySom'
                            name 'SkySom'
                            roles { role 'developer' }
                        }
                    }
                }
            }
        }
    }
}

String getVersion() {
    String version = "${minecraft_version}-${opentransport_version}"
    String branch = System.getenv("branch") != null ? System.getenv("branch") : ""
    println "Version: " + version
    println "Branch : " + branch
    if(branch != "") {
        version += "-" + branch

        String buildNumber = getBuildNumber()
        if(buildNumber != "") {
            version += "." + buildNumber
        }
        println "Build Number: " + buildNumber
    }
    println "Full Version: " + version
    return version
}

static String getBuildNumber() {
    String buildNumber = System.getenv("BUILD_NUMBER") != null ? System.getenv("BUILD_NUMBER") : ""
    if(buildNumber == "") {
        buildNumber = System.getenv("bamboo_buildNumber") != null ? "." + System.getenv("bamboo_buildNumber") : ""
    }
    return buildNumber
}

